version: 2.1

jobs:
  continuous-integration:
    docker:
      - image: cimg/base:stable
    resource_class: medium
    steps:
      - checkout
      - run:
          name: install-dependencies
          command: |
            sudo apt install software-properties-common
            sudo apt update
            sudo add-apt-repository ppa:deadsnakes/ppa
            sudo apt install python3.10
            sudo apt install python3-pip
            pip3 install flake8
      - run:
          name: lint-with-flake8
          command: |
            # stop the build if there are Python syntax errors or undefined names
            flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
            # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
            flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
  
  continuous-training-delivery:
    docker:
      - image: google/cloud-sdk
    resource_class: large
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            pip install -r requirements.txt
            python3 template.py
      - run:
          name: Download data from Source
          command: python3 src/stage_01_download_data.py
      - run:
          name: Preprocess Data
          command: python3 src/stage_02_preprocess_data.py
      - run:
          name: Model Training and Evaluation
          command: |
            python3 src/stage_03_train_evaluate.py
            chmod +x ./scripts/sanity_check_alert.sh
            ./scripts/sanity_check_alert.sh
          no_output_timeout: 1h

  continuous-deployment:
    docker:
      - image: google/cloud-sdk
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            pip install -r requirements.txt
            python3 template.py
      - run:
          name: Setting up pre-prod environment
          command: |
            chmod +x ./scripts/preprod_setup.sh
            ./scripts/preprod_setup.sh
      - run:
          name: Model Blessing
          command: python3 src/stage_05_model_blessing.py  --config=configs/config.yaml --params=params.yaml

  continuous-serving:
    docker:
      - image: google/cloud-sdk
    resource_class: medium
    steps:
      - checkout
      - run:
          name: Install dependencies
          command: |
            echo $GCLOUD_SERVICE_KEY | gcloud auth activate-service-account --key-file=-
            pip install -r requirements.txt
            python3 template.py
      - run:
          name: Batch prediction job
          command: python3 src/stage_06_production_service.py  --config=configs/config.yaml

workflows:
  Sensors CICD:
    jobs:
      - continuous-integration

      - continuous-training-delivery:
          requires:
            - continuous-integration

      - sanity-check:
          type: approval
          requires:
          - continuous-training-delivery

      - continuous-deployment:
          requires:
            - continuous-training-delivery
            - sanity-check

          filters:
            branches:
              only:
                - main
                - staging
                - dev

  # Scheduled Sensors CICD:
  #   triggers:
  #     - schedule:
  #         cron: "5 12 * * *"
  #         filters:
  #           branches:
  #             only:
  #               - main
  #   jobs:
  #     - continuous-integration

  #     - continuous-training-delivery:
  #         requires:
  #           - continuous-integration

  #     - sanity-check:
  #         type: approval
  #         requires:
  #         - continuous-training-delivery

  #     - continuous-deployment:
  #         requires:
  #           - continuous-training-delivery
  #           - sanity-check

  Serving Pipeline:
    jobs:
      - continuous-integration

      - continuous-serving:
          requires:
            - continuous-integration
          filters:
            branches:
              only:
                - main

  # Scheduled Serving Pipeline:
  #   triggers:
  #     - schedule:
  #         cron: "5 1 * * *"
  #         filters:
  #           branches:
  #             only:
  #               - main
  #   jobs:
  #     - continuous-integration

  #     - continuous-serving:
  #         requires:
  #           - continuous-integration
          